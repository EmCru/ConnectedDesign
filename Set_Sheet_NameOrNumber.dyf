<Workspace Version="1.3.2.2480" X="-574.722614701536" Y="-208.455250248363" zoom="1.02988563947099" ScaleFactor="1" Name="Set_Sheet_NameOrNumber" Description="renumbers or renames input sheets" ID="49f6f532-1b74-4dfc-b892-293e95630be7" Category="ArupBimSF.Revit.Views &amp; Sheets">
  <NamespaceResolutionMap>
    <ClassMap partialName="Sheet" resolvedName="Revit.Elements.Views.Sheet" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="06e7df0a-5d8f-4b96-9aa1-f3fc90804843" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1674.30555272866" y="500.877833994548" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="4">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <Script>import clr
clr.AddReference("RevitAPIUI")
from Autodesk.Revit.UI import TextBox
from Autodesk.Revit.UI import TaskDialog
from Autodesk.Revit.UI import TaskDialogCommonButtons

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument

def convertToList(testList):
	if isinstance(testList, list):
		return testList
	else:
		return [testList]
		
def checkInputNamesForDuplicates(newNamesList):
	if len(newNamesList) != len( set(newNamesList) ):
		TaskDialog.Show("Terminating rename process", "The list of newNumbers contains duplicates. Check your newNumbers list and ensure all new names are unique", TaskDialogCommonButtons.Ok)
		return True
		
def sheetNumbers(sheetList):
	docSheetNumbers = []
	for s in sheetList:
		docSheetNumbers.Add( s.SheetNumber )
	return docSheetNumbers
		
def renameSheet(sheets, data, param):
	for s, n in zip(sheets, data):
		numberParam = s.get_Parameter( param )
		numberParam.Set(n)
	
run = IN[3]

collector = FilteredElementCollector(doc).OfClass( ViewSheet ).OfCategory( BuiltInCategory.OST_Sheets )
elementlist = collector.ToElements()

docSheetNumbers = sheetNumbers(elementlist)

if run:
	TransactionManager.Instance.EnsureInTransaction(doc)
	
	sheets = UnwrapElement( convertToList(IN[0]) )
	newNumbers = convertToList( IN[1] )
	newNames =  convertToList( IN[2] )
	
	renameSheets = len(IN[2]) &gt; 0
	
	inputSheetNumbers = sheetNumbers(sheets)
	checkForDuplicates = checkInputNamesForDuplicates(newNumbers)
	if checkForDuplicates:
		OUT = "Rename terminated - list of new sheet names contains duplicates. Provide unique names and try again"
	else:
		if len(sheets) == len(newNumbers):
			duplicateName = []
			for i in newNumbers:
				if i in docSheetNumbers and i not in inputSheetNumbers: 
					duplicateName.Add( i )
			if len(duplicateName) &gt; 0: 
				TransactionManager.Instance.TransactionTaskDone()
				
				TaskDialog.Show("Terminating rename process", "The following sheet numbers already exist and cannot be used to re-number the sheets. Provide a list of unique names and try again:\n" + str(duplicateName), TaskDialogCommonButtons.Ok)
				OUT = "Rename terminated - new sheet names conflict with existing sheets in the document: " + str(duplicateName) + ". Provide unique names and try again" 
			else:
				renameSheet(sheets, [s.Id for s in sheets], BuiltInParameter.SHEET_NUMBER) 
				renameSheet(sheets, newNumbers, BuiltInParameter.SHEET_NUMBER) 
				
				if renameSheets:
					renameSheet(sheets, newNames, BuiltInParameter.SHEET_NAME)
				
				TransactionManager.Instance.TransactionTaskDone()
				OUT = "Sheets successfully renamed"
		else:
			TransactionManager.Instance.TransactionTaskDone()
			
			TaskDialog.Show("Lacing error", "The sheets and newNumbers lists are not equal in length. Ensure both lists contain an equal number of items and try again", TaskDialogCommonButtons.Ok)
			OUT = "Rename terminated - Lacing mismatch - ensure an equal number of items are in the sheets and newNumbers lists"</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="0c5c3c9c-abf7-45d1-8b0b-d0490a492f25" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1837.72356359652" y="525.765559422377" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Sheets" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9c9052f2-36fc-44f0-a87a-1cae84bcd2b8" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="1028.18250331092" y="357.38175338829" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter the Revit sheets to renumber or rename&#xD;&#xA;Sheets_In:Sheet[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="00400a67-b489-4750-baa3-cd1ffad8d295" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="933.917434421596" y="453.498854706633" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter a list of sheet numbers to renumber the sheets&#xD;&#xA;New_Numbers:string[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="a2dea93d-6446-493c-afed-92f069293588" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="473.351266925586" y="570.892875511472" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter a list of sheet names to rename the sheets. Leave empty to renumber only&#xD;&#xA;New_Names:string[]={}" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="aad14777-ac9e-4e0a-9b7e-aec0a8e386f1" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="698.726150627563" y="674.416613952589" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Set to True renumber or rename the input sheets&#xD;&#xA;RunMe:bool" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="06e7df0a-5d8f-4b96-9aa1-f3fc90804843" start_index="0" end="0c5c3c9c-abf7-45d1-8b0b-d0490a492f25" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9c9052f2-36fc-44f0-a87a-1cae84bcd2b8" start_index="0" end="06e7df0a-5d8f-4b96-9aa1-f3fc90804843" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="00400a67-b489-4750-baa3-cd1ffad8d295" start_index="0" end="06e7df0a-5d8f-4b96-9aa1-f3fc90804843" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a2dea93d-6446-493c-afed-92f069293588" start_index="0" end="06e7df0a-5d8f-4b96-9aa1-f3fc90804843" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="aad14777-ac9e-4e0a-9b7e-aec0a8e386f1" start_index="0" end="06e7df0a-5d8f-4b96-9aa1-f3fc90804843" end_index="3" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>