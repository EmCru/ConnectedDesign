<Workspace Version="1.3.2.2480" X="-155.669321237203" Y="156.393029065926" zoom="0.888789228297156" ScaleFactor="1" Name="Get_Element_Rotation" Description="get the rotation angle of elements" ID="70d95dc4-cae2-49c3-956d-65f1e0e59700" Category="ArupBimSF.Revit.Element_Location">
  <NamespaceResolutionMap>
    <ClassMap partialName="Element" resolvedName="Revit.Elements.Element" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="b3889674-4707-46b4-952a-d40bebe15356" type="PythonNodeModels.PythonNode" nickname="Element.RotationAngle" x="1121.81164565164" y="244.361249968303" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#This script looks for the rotation angle of Revit elements if available.
#If location is a LocationPoint then the Rotation value is available.
#In case of a slanted column, the Location is a LocationCurve, which doesn't have a rotation value.

import clr
import math

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#Import RevitAPI
clr.AddReference('RevitAPI')
import Autodesk
#The inputs to this node will be stored as a list in the IN variables.
resRotation = []
strCol= IN[0]

#make unwrapped list of elements
elements=[]
for i in strCol:
	elements.append(UnwrapElement(i))
	
#get location and then rotation of element, if not not existing, then set rotation to null.
for item in elements:
	try:
		loc=item.Location
		resRotation.append(math.degrees(loc.Rotation))
	except:
		resRotation.append(None)
	

#Assign your output to the OUT variable.
OUT=resRotation</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="a5c60f65-3fbc-49cd-9242-dd2d617dcc1f" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1323.64869725794" y="367.820713842583" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Angle" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="f6a45406-da3a-4026-ac23-c5de2e783cc3" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="917.445100108819" y="370.236854218716" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="Flatten({lst});" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="f768de41-ef08-4734-a9c7-1c8184b058f3" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="717.5" y="368.06121542056" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="element:Element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="b3889674-4707-46b4-952a-d40bebe15356" start_index="0" end="a5c60f65-3fbc-49cd-9242-dd2d617dcc1f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f6a45406-da3a-4026-ac23-c5de2e783cc3" start_index="0" end="b3889674-4707-46b4-952a-d40bebe15356" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f768de41-ef08-4734-a9c7-1c8184b058f3" start_index="0" end="f6a45406-da3a-4026-ac23-c5de2e783cc3" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>