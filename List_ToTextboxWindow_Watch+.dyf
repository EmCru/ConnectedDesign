<Workspace Version="1.3.2.2480" X="-229.567356533568" Y="-23.62201132058" zoom="1.22704736140834" ScaleFactor="1" Name="ListâžœTextboxWindow_Watch+" Description="opens up a text box with your input list items as text" ID="102afb39-9f26-40a3-b734-5049d09b3373" Category="ArupBimSF.Data Transfer">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="bc8a5ef0-e2c3-4aa6-83cb-e4dfd6d2cc73" type="PythonNodeModels.PythonNode" nickname="Python Script" x="672.465694903821" y="247.786937136823" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>import clr

clr.AddReference('System.Windows.Forms')
clr.AddReference('System.Drawing')
from System.Drawing import Point, Color, Font
from System.Windows.Forms import *
from cStringIO import StringIO

str_file = StringIO()
GCL = []
GCint = -1

def isElem(el1):
	return hasattr(el1, "Id")

def tolist(obj1):
	if hasattr(obj1,"__iter__"): return obj1
	else: return [obj1]
	
def isList(obj1):
	return hasattr(obj1,"__iter__")

def write_str(str1, str_file=str_file, GCL=GCL):
	str_file.write(''.join([j for j in GCL]))
	str_file.write(str1)

def list2str(l1, writeInd, GCL=GCL):
	global GCint, height1
	GCint += 1
	GCL.insert(GCint,"")
	for i in xrange(len(l1) ):
		GCL[GCint] = "[%i] " % i if writeInd else " "
		if isElem(l1[i]):
			write_str("%s        %i\n" % (l1[i].ToString(), l1[i].Id) )
		elif isList(l1[i]) and not l1[i]:
			write_str("Empty List\n")
		elif isList(l1[i]):
			list2str(l1[i], writeInd)
		elif l1[i] is None:
			write_str("null\n")
		else:
			write_str("%s\n" % l1[i].ToString())
		height1 += 24
	GCL.pop(GCint)
	GCint -= 1

class WatchBox(Form):
	def __init__(self):
		self.Text = "Emmett's Expandable Watch Window"
		self.BackColor = Color.FromArgb(40,40,40)
		self.ControlBox = False
		self.TopMost = True
		self.FormBorderStyle = FormBorderStyle.Sizable
		self.StartPosition = FormStartPosition.CenterScreen
		self.Resize += self.resize1

		self.button1 = Button()
		self.button1.Text = 'Close'
		self.button1.Font = Font("Calibri", 10)
		self.button1.AutoSize = True
		self.button1.Width = 200
		self.button1.ForeColor = Color.FromArgb(234,234,234)
		self.button1.Click += self.save
		self.Controls.Add(self.button1)
		
		self.box1 = RichTextBox()
		self.box1.Multiline = True
		self.box1.Location = Point(5, 5)
		self.box1.Font = Font("Calibri", 12)
		self.box1.BackColor = Color.FromArgb(53,53,53)
		self.box1.ForeColor = Color.FromArgb(234,234,234)
		self.box1.DetectUrls = True
		self.Controls.Add(self.box1)

	def adjust_controls(self, height1, width1):
		if height1 &gt; 800:
			height1 = 800
			self.box1.ScrollBars = RichTextBoxScrollBars.Vertical
		if width1 &lt; 23 : width1 = 23
		if width1 &gt; 88: width1 = 88
		self.Width = 10 + (width1 + 2) * 9 #character width seems to vary between PCs
		self.Height = height1 + 90
		self.box1.Width = self.Width - 17
		self.box1.Height = self.Height - 80
		self.button1.Location = Point(self.Width/2 - 103, self.Height - 70)
	
	def resize1(self, sender, event):
		if self.Width &lt; 210: self.Width = 230
		if self.Height &lt; 120: self.Height = 120
		self.box1.Width = self.Width - 17
		self.box1.Height = self.Height - 80
		self.button1.Location = Point(self.Width/2 - 103, self.Height - 70)
	
	def setTxt(self, t1):
		self.box1.Text = t1
		self.Refresh()
			
	def save(self, sender, event):
		self.text1 = self.box1.Text
		self.Close()

if IN[0] == None: l1 = []
else: l1 = tolist(IN[0])

height1 = 30
list2str(l1, IN[1])
str_content = str_file.getvalue()
width1 = max([len(i) for i in str_content.split('\n')])
form = WatchBox()
form.adjust_controls(height1, width1)
form.setTxt(str_content)
Application.Run(form)
OUT = form.text1
Application.Exit()
str_file.close()</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="2a852d8f-9c16-4c4c-999c-4544ce9562f8" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="850.421510287503" y="238.435796764011" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="TextBox" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="e3b81b46-06aa-4e82-a565-7dd0efbc7a72" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="325.866031324443" y="244.111307308288" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="List_In" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="01456786-d56a-4fab-8e62-f0f5fb9b5db1" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="313.449905721627" y="341.861528309502" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Add_Indexes:bool = true" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="13281df5-6943-4095-ba1d-77fee72ea55f" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="334.183334151183" y="428.893383662793" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Reset:bool = false" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="bc8a5ef0-e2c3-4aa6-83cb-e4dfd6d2cc73" start_index="0" end="2a852d8f-9c16-4c4c-999c-4544ce9562f8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e3b81b46-06aa-4e82-a565-7dd0efbc7a72" start_index="0" end="bc8a5ef0-e2c3-4aa6-83cb-e4dfd6d2cc73" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01456786-d56a-4fab-8e62-f0f5fb9b5db1" start_index="0" end="bc8a5ef0-e2c3-4aa6-83cb-e4dfd6d2cc73" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="13281df5-6943-4095-ba1d-77fee72ea55f" start_index="0" end="bc8a5ef0-e2c3-4aa6-83cb-e4dfd6d2cc73" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>