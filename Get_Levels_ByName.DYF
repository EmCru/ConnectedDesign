<Workspace Version="1.3.2.2480" X="2.83762510937501" Y="278.72627784375" zoom="1.545620359375" ScaleFactor="1" Name="Get_Levels_ByName" Description="Get all Level Specified by input level name list" ID="d5c7a88d-51db-421e-9194-8c8c2ed19c2b" Category="ArupBimSF.Revit.Location_References">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="bc8378ed-ead6-4435-830f-007e781b94e0" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="799" y="59" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Level" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="c07f6d8c-a8c4-48a0-86cd-11e1bc3318c6" type="PythonNodeModels.PythonNode" nickname="Python Script" x="484.643449172103" y="54.5891377069743" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Copyright(c) 2015, Konrad K Sobon
# @arch_laboratory, http://archi-lab.net

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
levelName = IN[0]

level = None
message = "Name doesn't match any levels in \n the project. Pick a different one"
allLevels = FilteredElementCollector(doc).OfClass(Level).ToElements()
for i in allLevels:
	if i.Name == levelName:
		level = i
		break
	else:
		continue

if level == None:
	OUT = '\n'.join('{:^35}'.format(s) for s in message.split('\n'))
else:
	OUT = level</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="c55da8a0-0c54-4f35-b40d-1ea60fa7a056" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="218.880756364584" y="52.4120423713767" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Level Name" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="c07f6d8c-a8c4-48a0-86cd-11e1bc3318c6" start_index="0" end="bc8378ed-ead6-4435-830f-007e781b94e0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c55da8a0-0c54-4f35-b40d-1ea60fa7a056" start_index="0" end="c07f6d8c-a8c4-48a0-86cd-11e1bc3318c6" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>